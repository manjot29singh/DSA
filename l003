import java.util.*;
public class btd{
    public static Scanner sc = new Scanner(System.in);
    //Decimal to any base (Always think to convert in binary using 2 after that change  to "b")
    public static long dtab(long n, long b)
    {
        long pow =1, res=0;
        while( n != 0)
        {
            long lastdigit = n % b;
            n = n/b;
            res = res + lastdigit * pow;
            pow = pow*10;
        }
        return res;
    }
    //Any base to decimal
    public static long abtd(long n, long b)
    {
        long pow=1, resl = 0;
        while( n != 0 )
        {
            long lastdigit= n % 10;
            n=n/10;
            resl += lastdigit * pow;
            pow = pow*b;
        }
        return resl;
    }
    //Any base to Any base
    public static long abtd1(long n, long b)
    {
        long pow=1, resl = 0;
        while( n != 0 )
        {
            long lastdigit= n % 10;
            n=n/10;
            resl += lastdigit * pow;
            pow = pow*b;
        }
        return resl;
    }
    public static long dtab1(long n, long b)
    {
        long pow =1, res=0;
        while( n != 0)
        {
            long lastdigit = n % b;
            n = n/b;
            res = res + lastdigit * pow;
            pow = pow*10;
        }
        return res;
    }
    //Binary addition 
    public static long binaryaddition(long a, long b , long base)
    {
        long carry=0,res=0,pow=1,ld=0;
        while( a!=0 || b!=0 || carry!=0) 
        {   
            long x= a%10;
            long y = b%10;
            long z= x + y + carry;
            a = a/10;
            b = b/10;
             ld= z % base;
            carry = z / base;

            res = res + ld * pow;
            pow = pow*10;
        }
        return res;   
    }
    //Binary Subtraction
    public static long binarysubtraction(long n1, long n2, long b)
    {
        long borrow=0,sum=0,pow=1,res=0;
        while(n1 != 0 || n2 != 0)
        {
            long x = n1%10;
            long y = n2%10;
            if(x+borrow>=y)
            {
                sum=x-y+borrow;
                borrow=0;
            }
            else 
            {
                sum= x-y + b + borrow;
                borrow= -1;
            }
            n1=n1/10;
            n2=n2/10;

            res= res + sum*pow;
            pow= pow*10;
        }
        return res;
    }
  
  
  
  
  }
   
