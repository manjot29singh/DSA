public class stack{
    protected int[] arr = null;
    protected int capacity = 0;
    protected int elementcount = 0 ;
    protected int tos = -1;

    //constructor=======================================
    protected void initializeVariables(int capacity){
        this.capacity = capacity;
        this.arr = new int[this.capacity];
        this.elementcount = 0;
        this.tos = -1; 
    }
    public stack(){//default
        initializeVariables(10);
    }

    public stack(int size){//parametrized
        initializeVariables(size);

    }
     //basic functions===================================
    public int size(){
        return this.elementcount;
    }
    public boolean isempty(){
        return this.elementcount == 0;
    }
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("[");
        for (int i = 0; i < this.elementcount; i++) {
            sb.append(this.arr[i]);
            if (i != this.elementcount - 1)
                sb.append(", ");
        }
        sb.append("]");
        return sb.toString();
    }
     public int topofthestack()throws Exception{
        Underflowexception();
        return this.arr[this.tos];
    }
     //Exception========================================
  private void Overflowexception() throws Exception{
        if(this.capacity == this.elementcount){
            throw new Exception("Stackisoverflow");
        }
    }
   private void Underflowexception() throws Exception{
        if(this.elementcount==0){
            throw new Exception("Stack is empty");
        }
    }
    
    
    
}
